//[coc-wiki](https://github.com/neoclide/coc.nvim/wiki)
//[neoclide/coc-cn Gitter](https://gitter.im/neoclide/coc-cn)
//[coc.nvim/data/schema.json](https://github.com/neoclide/coc.nvim/blob/master/data/schema.json)
//coc plugins所在: ~/.config/coc/
{
    "python.analysis.extraPaths": [
        "./"
    ],
    "coc.preferences.rootPatterns": [
        ".vimroot"
    ],
    "coc.preferences.extensionUpdateCheck": "weekly",
    "coc.preferences.colorSupport": true,
    //[How to jump to definition in new or existing tab](https://github.com/neoclide/coc.nvim/issues/318)
    "coc.preferences.jumpCommand": "tab drop",
    "list.height": 25,
    "outline.showLineNumber": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.cargo.loadOutDirsFromCheck": true,
    "suggest.noselect": true,
    "suggest.enablePreselect": false,
    "python.jediEnabled": false,
    "pyright.enable": true,
    "pyright.trace.server": "verbose",
    "typescript.format.placeOpenBraceOnNewLineForFunctions": true,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,
    "javascript.format.placeOpenBraceOnNewLineForFunctions": true,
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,
    //在coc.txt里搜insertMappings可查看相关帮助
    "list.insertMappings": {
        "<Tab>": "do:togglemode",
        "<C-o>": "do:chooseaction",
        "<CR>": "action:drop",
        //action:open加上jumCommand的tab drop, 可实现跳到已存在或新tab中
        //"<C-t>": "action:tabe",
        "<C-t>": "action:open",
        "<C-s>": "action:split",
        "<C-v>": "action:vsplit",
        "<C-p>": "do:previewtoggle",
        //"<C-y>": "eval:@@"    //相当于<C-r>"
        "<C-y>": "prompt:paste"
    },
    "list.normalMappings": {
        "<Tab>": "do:togglemode",
        "<C-o>": "do:chooseaction",
        "<CR>": "action:drop",
        "<C-t>": "action:open",
        "<C-s>": "action:split",
        "<C-v>": "action:vsplit",
        "<C-p>": "do:previewtoggle",
        "<C-j>": "normal:j",
        "<C-k>": "normal:k",
        "q": "do:exit"
    },
    "languageserver": {
        "python": {
            "enable": false,
            "rootPatterns": [
                ".vimroot"
            ],
            "command": "python",
            "args": [
                "-mpyls",
                "-vv",
                "--log-file",
                "/tmp/lsp_python.log"
            ],
            "trace.server": "verbose",
            "filetypes": [
                "python"
            ],
            "settings": {
                "pyls": {
                    "enable": true,
                    "trace": {
                        "server": "verbose"
                    },
                    "commandPath": "",
                    "configurationSources": [
                        "pycodestyle"
                    ],
                    "plugins": {
                        "jedi_completion": {
                            "enabled": true
                        },
                        "jedi_hover": {
                            "enabled": true
                        },
                        "jedi_references": {
                            "enabled": true
                        },
                        "jedi_signature_help": {
                            "enabled": true
                        },
                        "jedi_symbols": {
                            "enabled": true,
                            "all_scopes": true
                        },
                        "mccabe": {
                            "enabled": true,
                            "threshold": 15
                        },
                        "preload": {
                            "enabled": true
                        },
                        "pycodestyle": {
                            "enabled": true
                        },
                        "pydocstyle": {
                            "enabled": false,
                            "match": "(?!test_).*\\.py",
                            "matchDir": "[^\\.].*"
                        },
                        "pyflakes": {
                            "enabled": true
                        },
                        "rope_completion": {
                            "enabled": true
                        },
                        "yapf": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        "bash": {
            "command": "bash-language-server",
            "args": [
                "start"
            ],
            "filetypes": [
                "sh"
            ]
        },
        "coc-clangd": {
            "command": "clangd",
            "rootPatterns": [
                "compile_flags.txt",
                "compile_commands.json"
            ],
            "filetypes": [
                "c",
                "cc",
                "cpp",
                "c++",
                "objc",
                "objcpp",
                "hpp"
            ]
        },
        //"ccls": {
        //  "command": "ccls",
        //  "filetypes": [ "c", "cc", "cpp", "c++", "objc", "objcpp" ],
        //  "rootPatterns": [ ".ccls", "compile_commands.json", ".git/", ".svn/", ".hg/"],
        //  "initializationOptions": {
        //      "cache": {
        //          "directory": "/tmp/ccls"
        //      }
        //  }
        //},
        "cmake": {
            "command": "cmake-language-server",
            "filetypes": [
                "cmake"
            ],
            "rootPatterns": [
                "build/"
            ],
            "initializationOptions": {
                "buildDirectory": "build"
            }
        },
        "golang": {
            "command": "gopls",
            "rootPatterns": [
                "go.mod"
            ],
            "filetypes": [
                "go"
            ]
        },
        "kotlin": {
            "command": "~/lsp/kotlin/server/bin/kotlin-language-server",
            "filetypes": [
                "kotlin"
            ]
        },
        "groovy": {
            "command": "java",
            "args": [
                "-jar",
                "/path/to/groovy-language-server-all.jar"
            ],
            "filetypes": [
                "groovy"
            ]
        },
        "java": {
            "command": "jdtls",
            "filetypes": [
                "java",
                "class"
            ],
            "rootPatterns": [
                "maven",
                ".git",
                ".svn",
                ".vimroot"
            ]
        },
        "lua": {
            "command": "lua-lsp",
            "filetypes": [
                "lua"
            ]
        },
        "sql": {
            "command": "sql-language-server",
            "args": [
                "up",
                "--method",
                "stdio"
            ],
            "filetypes": [
                "sql",
                "mysql"
            ]
        }
    }
}
